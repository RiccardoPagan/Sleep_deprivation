anova(M0, M1, M2, M3)
M3
M4 <- lmer(IU~fase+(1|scuola) + (fase|ID), data=attiva.long)
library(lme4)
M4 <- lmer(IU~fase+(1|scuola) + (fase|ID), data=attiva.long)
which(ranef(M3)$ID>5)
library(sjPlot)
plot_model(M3, type="re")
install.packages("glmmTMB")
plot_model(M3, type="re")
M3 <- lmer(IU~fase+(1|scuola) + (1|ID), data=attiva.long)
plot_model(M3, type="re")
library(lattice)
dotplot(ranef(M3, TRUE))
plot_model(M4, type="re")
M4 <- lmer(IU~fase+(1|scuola) + (fase|ID), data=attiva.long)
model.sel(M0, M1, M2)
library(MuMIn)
model.sel(M0, M1, M2)
model.sel(M0, M1, M3)
ADati::plot_relative_evidence(M3)
ADati::plot_relative_evidence(AICtabel$weight, labels = rownames("AICtable"))
ADati::plot_relative_evidence(AICtable$weight, labels = rownames("AICtable"))
ADati::plot_relative_evidence(AICtable$weight)
library(ADati)
plot_relative_evidence(AICtable$weight)
AICtable
library(ADati)
AICtable
model.sel(M0, M1, M3)
AICtable <- model.sel(M0, M1, M3)
library(ADati)
plot_relative_evidence(AICtable$weight)
plot_relative_evidence(AICtable$weight, rownames("AICtable"))
plot_relative_evidence(AICtable$weight, rownames(AICtable))
library(performance)
perfomance(M3)
performance(M3)
check_model(M3) #diagnostica
check_model(M3, check="linearity")
check_model(M3, check="qq")
check_model(M3, check="normality")
check_model(M3, check="homogeneity")
check_model(M3, check="outlier")
check_model(M3, check="outlier")
check_model(M3, check="outliers")
check_model(M3, check="reqq")
check_predictions(M3)
library(BayesFactor)
BF <- generalTestBF(IU~fase+scuola+ID)
BF <- generalTestBF(IU~fase+scuola+ID, data=attiva.long, whichRandom = c("scuola", "ID"))
BF
plot(BF)
library(multilevel)
install.packages("multilevel")
library(multilevel)
data("sherifdat")
dat <- scherifdat
library(multilevel)
data("sherifdat")
dat <- scherifdat
data(sherifdat)
dat <- scherifdat
data("sherifdat")
dat <- sherifdat
head(dat)
fit <- lmer(y~group+condition+time+(1|person))
library(lme4)
fit <- lmer(y~group+condition+time+(1|person))
library(multilevel)
data("sherifdat")
dat <- sherifdat
library(lme4)
fit <- lmer(y~group+condition+time+(1|person))
fit <- lmer(y~group+condition+time+(1|person), data=dat)
fit
fit1 <- lmer(y~group+condition+time+(1|ID), data=dat)
fit1 <- lmer(y~group+condition+time+(1|id), data=dat)
library(effects)
plot(allEffects(fit))
load("~/Desktop/Uni/Analisi dei dati/didattica-analisi-dati-2023-main/Impact.rda")
str(Impact)
str(Impact)
summary(Impact)
library(psych)
describe(Impact)
describe(Impact)
library(DataExplorer)
plot_bar(Impact)
plot_histogram(Impact)
cor(Impact)
cor(Impact[, -c(1:3)])
plot_correlation(Impact[, -c(1:3)])
install.packages("GGally")
library(GGally)
ggpairs(Impact, aes(color=Status, fill=Status, alpha=.3), columns = 5:9)
boxplot(Compr_test~Status, data=Impact)
fit <- lm(Compr_test~Status, data=Impact)
fit
fit
summary(fit)
install.packages("effsize")
library(effsize)
cohen.d(Compr_test~Status, data = Impact)
install.packages("overlapping")
library(overlapping)
dataList <- list(imm~Impact$Compr_test[Impact$Status==1], ita=Impact$Compr-test[Impact$Status==0])
overlap(dataList)
dataList <- list(imm~Impact$Compr_test[Impact$Status==1], ita=Impact$Compr-test[Impact$Status==0])
overlap(dataList)
dataList <- list(imm=Impact$Compr_test[Impact$Status==1], ita=Impact$Compr-test[Impact$Status==0])
overlap(dataList, plot=TRUE)
library(overlapping)
dataList <- list(imm=Impact$Compr_test[Impact$Status==1], ita=Impact$Compr-test[Impact$Status==0])
overlap(dataList, plot=TRUE)
library(overlapping)
dataList <- list(imm=Impact$Compr_test[Impact$Status==1], ita=Impact$Compr-test[Impact$Status==0])
dataList <- list(imm=Impact$Compr_test[Impact$Status==1], ita=Impact$Compr_test[Impact$Status==0])
overlap(dataList, plot=TRUE)$0V
overlap(dataList, plot=TRUE)
fit_multi <- manova(cbind(Compr_test, Compr_inf)~Status, data=Impact)
summary.aov(fit_multi)
summary(fit_multi)
model <- "Compr_test~Status, Compr_inf~Status"
sem(model, data=Impact)
library(lavaan)
model <- "Compr_test~Status, Compr_inf~Status"
sem(model, data=Impact)
model <- "Compr_test~Status Compr_inf~Status"
sem(model, data=Impact)
library(lavaan)
model <- "Compr_test~Status
Compr_inf~Status"
sem(model, data=Impact)
install.packages("semPlot")
library(semPlot)
semPaths(fit, whatLabels="est")
library(performance)
check_predictions(fit)
load("~/Desktop/Uni/Analisi dei dati/didattica-analisi-dati-2023-main/DevProf4.rda")
#analisi tesi "Devprof4"
plot_correlation(DevProf4[, 7:12])
install.packages("rmarkdown")
help(ggplot)
help(ggplot2)
??ggplot2
mtcars
#analisi tesi "Impact"
library(psych)
describe(Impact)
library(DataExplorer)
plot_bar(Impact) #per frequenze
plot_histogram(Impact)
cor(Impact[, -c(1:3)])
plot_correlation(Impact[, -c(1:3)])
library(GGally)
ggpairs(Impact, aes(color=Status, fill=Status, alpha=.3), columns = 5:9)
boxplot(Compr_test~Status, data=Impact)
fit <- lm(Compr_test~Status, data=Impact)
summary(fit)
library(effsize)
cohen.d(Compr_test~Status, data = Impact)
library(overlapping)
dataList <- list(imm=Impact$Compr_test[Impact$Status==1], ita=Impact$Compr_test[Impact$Status==0])
library(overlapping)
dataList <- list(imm=Impact$Compr_test[Impact$Status==1], ita=Impact$Compr_test[Impact$Status==0])
overlap(dataList, plot=TRUE) #quantificare somiglianza
fit_multi <- manova(cbind(Compr_test, Compr_inf)~Status, data=Impact)
summary.aov(fit_multi)
summary(fit_multi)
library(lavaan)
model <- "Compr_test~Status
Compr_inf~Status"
sem(model, data=Impact)
library(semPlot)
semPaths(fit, whatLabels="est")
library(performance)
check_predictions(fit)
#analisi tesi "Devprof4"
plot_correlation(DevProf4[, 7:12])
check_predictions(fit)
semPaths(fit, whatLabels="est")
library(semPlot)
library(performance)
check_predictions(fit)
install.packages("papaya")
install.packages("papaja")
install.packages("DiagrammeR")
pow <- function(x, esp) {
result <- x^esp
return(result)
}
pow(2,2)
pow(2,3)
env.profile()
my_fun <- function() {environment()}
my_fun
my_fun()
parent.env(my_fun())
for(i in 1:3) {
x[i] <- x[i]+10
}
x <- c(13, 12, 21)
for(i in 1:3) {
x[i] <- x[i]+10
}
x
x <- list("a", 4:7, c(9,8))
x[[1]]
x[[1]][1]
x[[1]][2]
x[[2]][2]
sapply(x, `[[`, 1)
sapply(x, `[[`, "+", 1)
install.packages("osfr")
install.packages(
"rsthemes",
repos = c(gadenbuie = 'https://gadenbuie.r-universe.dev', getOption("repos"))
)
?lme4::sleepstudy
str(sleepstudy)
summary(sleepstudy)
sleepstudy
M0 <- lm (reaction~1, data=sleepstudy)
M0 <- lm (Reaction~1, data=sleepstudy)
M0
library(psych)
library(DataExplorer)
describe(sleepstudy)
plot_intro(sleepstudy)
plot_bar(sleepstudy)
plot_histogram(sleepstudy)
plot_histogram(Reaction$sleepstudy)
plot_histogram(sleepstudy$Reaction)
plot_boxplot(sleepstudy)
plot_boxplot(sleepstudy$Reaction)
library(performance)
describe(sleepstudy)
m0 <- lm (Reaction~1, data=sleepstudy)
m1 <- lm (Reaction~Days, data=sleepstudy)
performance(m1)
m1
describe(sleepstudy)
plot_intro(sleepstudy)
plot_histogram(sleepstudy$Reaction)
check_model(m1)
plot(m1)
getwd()
setwd("/Users/riccardopagan/Desktop/MyProject/Data")
getwd()
library(tidyverse)
read.csv("308.csv")
dataframe <- read.csv("308.csv")
dataframe
sleepstudy
dataframe <- read.csv2("308.csv")
dataframe
dataframe <- read.csv2("330.csv")
dataframe
dataframe <- read.csv2("331.csv")
dataframe
subjects <- c("308", "309", "310", "330", "331", "332", "333", "334", "335", "337", "349", "350", "351", "352", "369", "370", "371", "372")
MyData <- read.csv2("308.csv")
subjects <- c("309", "310", "330", "331", "332", "333", "334", "335", "337", "349", "350", "351", "352", "369", "370", "371", "372")
for(i in subjects) {
fname <- paste(i, ".csv")
nfile <- read.csv2(fname)
aggregate(nfile, MyData)
}
subjects <- c("309", "310", "330", "331", "332", "333", "334", "335", "337", "349", "350", "351", "352", "369", "370", "371", "372")
for(i in subjects) {
fname <- paste(i, sep = ".", "csv")
nfile <- read.csv2(fname)
aggregate(nfile, MyData)
}
MyData <- read.csv2("308.csv")
subjects <- c("309", "310", "330", "331", "332", "333", "334", "335", "337", "349", "350", "351", "352", "369", "370", "371", "372")
MyData <- read.csv2("308.csv")
for(i in subjects) {
fname <- paste(i, sep = ".", "csv")
nfile <- read.csv2(fname)
aggregate(nfile, MyData)
}
library(tidyverse)
MyData <- read.csv2("308.csv")
dataframe <- read.csv2("331.csv")
MyData <- read.csv2("308.csv")
subjects <- c("309", "310", "330", "331", "332", "333", "334", "335", "337", "349", "350", "351", "352", "369", "370", "371", "372")
for(i in subjects) {
fname <- paste(i, sep = ".", "csv")
nfile <- read.csv2(fname)
aggregate(nfile, MyData)
}
merge(nfile, MyData)
MyData <- read.csv2("308.csv")
subjects <- c("309", "310", "330", "331", "332", "333", "334", "335", "337", "349", "350", "351", "352", "369", "370", "371", "372")
for(i in subjects) {
fname <- paste(i, sep = ".", "csv")
nfile <- read.csv2(fname)
merge(nfile, MyData)
}
MyData
fname <- paste(i, sep = ".", "csv")
for(i in subjects) {
fname <- paste(i, sep = ".", "csv")
nfile <- read.csv2(fname)
merge(MyData, nfile)
}
MyData
len(MyData)
length(MyData)
help("length")
length(columns(MyData))
length(column(MyData))
nrow(MyData)
len <- nrow((MyData))
ncolom <- c(len*308)
ncolom
rep(308, len)
MyData <- read.csv2("308.csv")
len <- nrow(MyData)
IDcol <- rep(i, len)
MyData
MyData$ID <- IDcol
MyData
MyData <- read.csv2("308.csv")
len <- nrow(MyData)
IDcol <- rep(308, len)
MyData$ID <- IDcol
MyData
subjects <- c("309", "310", "330", "331", "332", "333", "334", "335", "337", "349", "350", "351", "352", "369", "370", "371", "372")
for(i in subjects) {
fname <- paste(i, sep = ".", "csv")
nfile <- read.csv2(fname)
len <- nrow(nfile)
IDcol <- rep(i, len)
nfile$ID <- IDcol
merge(MyData, nfile)
}
MyData
for(i in subjects) {
fname <- paste(i, sep = ".", "csv")
nfile <- read.csv2(fname)
len <- nrow(nfile)
IDcol <- rep(i, len)
nfile$ID <- IDcol
nDATA <- merge(MyData, nfile)
}
MyData
nDATA
for(i in subjects) {
fname <- paste(i, sep = ".", "csv")
nfile <- read.csv2(fname)
len <- nrow(nfile)
IDcol <- rep(i, len)
nfile$ID <- IDcol
merge(MyData, nfile, by="ID")
}
MyData
nfile
merge(MyData, nfile, by="ID")
merge(MyData, nfile)
merge(MyData, nfile, by="ID", all=TRUE)
merge(MyData, nfile, by="Reaction", all=TRUE)
merge(MyData, nfile, by="Reaction", "Days", all=TRUE)
merge(MyData, nfile, by=c("Reaction", "Days", all=TRUE)
merge(MyData, nfile, by=c("Reaction", "Days", all=TRUE)
merge(MyData, nfile, by=c("Reaction", "Days"), all=TRUE)
merge(MyData, nfile, by=c("Reaction", "Days", "ID"), all=TRUE)
for(i in subjects) {
fname <- paste(i, sep = ".", "csv")
nfile <- read.csv2(fname)
len <- nrow(nfile)
IDcol <- rep(i, len)
nfile$ID <- IDcol
merge(MyData, nfile, by=c("Reaction", "Days", "ID"), all=TRUE)
}
MyData
for(i in subjects) {
fname <- paste(i, sep = ".", "csv")
nfile <- read.csv2(fname)
len <- nrow(nfile)
IDcol <- rep(i, len)
nfile$ID <- IDcol
merge(nfile, nfile, by=c("Reaction", "Days", "ID"), all=TRUE)
}
nfile
for(i in subjects) {
fname <- paste(i, sep = ".", "csv")
nfile <- read.csv2(fname)
len <- nrow(nfile)
IDcol <- rep(i, len)
nfile$ID <- IDcol
MyData <- merge(MyData, nfile, by=c("Reaction", "Days", "ID"), all=TRUE)
}
MyData
length(MyData)
nrow((MyData))
nrow(sleepstudy)
sleepstudy
MyData <- read.csv2("308.csv")
MyData
len <- nrow(MyData)
len
IDcol <- rep(308, len)
IDcol
MyData$ID <- IDcol
MyData
for(i in subjects) {
fname <- paste(i, sep = ".", "csv")
nfile <- read.csv2(fname)
len <- nrow(nfile)
IDcol <- rep(i, len)
nfile$ID <- IDcol
MyData <- merge(MyData, nfile, by=c("Reaction", "Days", "ID"), all=TRUE)
}
arrange(MyData, ID)
MyData
MyData <- arrange(MyData, ID)
MyData
MyData <- arrange(MyData, ID, Days)
MyData
library(tidyverse)
library(psych)
library(DataExplorer)
library(performance)
# first analyis to explore my dataset
describe(MyData)
plot_intro(MyData)
plot_histogram(MyData$Reaction)
m0 <- lm (Reaction~1, data=MyData)
m1 <- lm (Reaction~Days, data=MyData)
check_model(m1)
plot(m1)
library(ggplot2)
graf <- ggplot(MyData, aes(Reaction, Days)) +
geom_point()
graf <- ggplot(MyData, aes(Reaction, Days)) + geom_point()
graf
graf <- ggplot(MyData, aes(Reaction, Days)) + geom_point() + geom_smooth(method = "lm")
graf
graf <- ggplot(MyData, aes(Reaction, Days))
+ geom_point()
+ geom_smooth(method = "lm")
graf <- ggplot(MyData, aes(x=Days, y=Reaction, group=ID, color=ID)) + geom_point() + geom_smooth(method = "lm")
graf
ggplot(MyData, aes(x=Days, y=Reaction, group=ID, color=ID)) + geom_point() + geom_smooth()
ggplot(MyData, aes(x=Days, y=Reaction, group=ID, color=ID)) + geom_point()
ggplot(MyData, aes(x=Days, y=Reaction, group=ID, color=ID)) + geom_point() + geom_line()
ggplot(MyData, aes(x=Days, y=Reaction)) + geom_point() + geom_smooth(method = "lm")
help("check_model")
ggplot(MyData, aes(x=Days, y=Reaction, group=ID, color=ID)) + geom_point() + geom_line() #linear regression
#ouputs
ggplot(MyData, aes(x=Days, y=Reaction, group=ID, color=ID)) + geom_point() + geom_smooth(method = "lm") #linear regression of each single participant
#ouputs
ggplot(MyData, aes(x=Days, y=Reaction, group=ID, color=ID)) + geom_point() + geom_line()
ggplot(MyData, aes(x=Days, y=Reaction)) + geom_point() + geom_smooth(method = "lm") # general linear regression
# visual check of model various assumptions
check_model(m1)
# first analyis to explore my dataset
describe(MyData)
plot_intro(MyData)
plot_histogram(MyData$Reaction)
fitted(fit1) #valori attesi dal modello
cor(fitted(fit1), residuals(fit1)) #correlazione tra i due (result=0)
summary(fit0)
#si chiama modello nullo perchè ho messo 1. Il modello nullo è un modo per
#calcolare la media
fit0 <- lm(frequency ~ 1, data=gambling)
summary(fit0)
summary(m1)
summary(m1)
summary(m0, m1)
summary(m1)
setwd("/Users/riccardopagan/Desktop/MyProject/Data")
PATH <- getwd()
dir(PATH)
ID <- substr(fname, 1, nchar(fname)-4)
ID
library(tidyverse)
for(fname in dir(PATH)) {
ID <- substr(fname, 1, nchar(fname)-4)
sleep_data=[[ID]]
for(fname in dir(PATH)) {
ID <- substr(fname, 1, nchar(fname)-4)
sleep_data=ID
paste(fname, sep = ".", "csv") |> read.csv2()
}
for(fname in dir(PATH)) {
ID <- substr(fname, 1, nchar(fname)-4)
sleep_data=ID
paste(ID, sep = ".", "csv") |> read.csv2()
}
sleep_data
paste(ID, sep = ".", "csv") |> read.csv2()
for(fname in dir(PATH)) {
ID <- substr(fname, 1, nchar(fname)-4)
sleep_data= [[ID]] <- fname
for(fname in dir(PATH)) {
ID <- substr(fname, 1, nchar(fname)-4)
sleep_data= [ID] <- fname
for(fname in dir(PATH)) {
ID <- substr(fname, 1, nchar(fname)-4)
sleep_data= ID <- fname
paste(ID, sep = ".", "csv") |> read.csv2()
}
for(fname in dir(PATH)) {
ID <- substr(fname, 1, nchar(fname)-4)
sleep_data= ID <- fname
read.csv2(fname)
}
sleep_data
